# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: build

%files
    fd-partial-grounding

%post
    apt-get update
    apt-get -y install --no-install-recommends cmake make g++ python3

    rm -rf fd-partial-grounding/builds
    cd fd-partial-grounding
    python3 build.py
    strip --strip-all builds/release/bin/downward builds/release/bin/preprocess-h2
    cd ..


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: run

# Copy planner binary and required files from Stage 1.
%files
    requirements-plan.txt

    plan.py /plan.py
    plan-partial-grounding.py /plan-partial-grounding.py

%files from build
    /fd-partial-grounding/builds/release/bin/
    /fd-partial-grounding/fast-downward.py
    /fd-partial-grounding/driver

%post
    apt-get update
    apt-get -y install --no-install-recommends python3 python3-pip
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    pip install -r requirements-plan.txt

%runscript
    #! /bin/bash
    set -euo pipefail

    DOMAIN_KNOWLEDGE_FILE="$1"
    DOMAIN_FILE="$2"
    PROBLEM_FILE="$3"
    PLAN_FILE="$4"

    python3 /plan.py "$DOMAIN_KNOWLEDGE_FILE" "$DOMAIN_FILE" "$PROBLEM_FILE" "$PLAN_FILE"

%labels
Name        GOFAI
Description Planning part of the GOFAI submission
Authors     Alvaro Torralba <alto@cs.aau.dk>, Daniel Gnad <daniel.gnad@liu.se>
License     GPL 3
Tracks      single-core
SupportsDerivedPredicates                       yes
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
